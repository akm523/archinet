https://github.com/eclipse/linuxtools/commit/fe83dc324ed9f8d95ec8ecd3bdf8d99ebd4d7b07,more osio rest mylyn changes - refactor osiorestuser class into identity class and move to proper package - move initspaces() method from classes into new class - refactor osiorestworkitem to workitem class and move to proper package - remove unused osiorestgetusers class - create new class to pass and return data back from method - change all callers appropriately - add for task creator get task data get task labels and get user,Preventive Changes,preventive,,test,refactor into move to,,,
https://github.com/eclipse/linuxtools/commit/44cb24d06b9bf45e58e46d023d5d38135bbd3662,add osio mylyn core plug-in - modify osiorestgetsingletask class to use client's requestprovider instead of calling requests directly - add new - add new - add new - add a json directory to json parsing of various classes,preventive Changes,preventive,,test,modify,,,
https://github.com/eclipse/linuxtools/commit/64e8222e0ebf3e3a2075b2f8f5a09d6bcf2ad6ca,add support to osio mylyn rest core - remove unused osiologinrequest class - add new iosiorestrequestprovider interface to allow to supply mock-ups of http requests - add new defaultosiorestrequestprovider class to implement the default request provider using actual http rest requests - modify osiorestclient to use iosiorestrequestprovider to do requests - modify osiorestclient constructor to create a defaultosiorestrequestprovider class and add a new constructor that takes an iosiorestrequestprovider input - change all the rest object classes (such as space area) to allow setting via a constructor so a scenario can set up values to pass back - fix up java warnings in various classes - remove the activity section from the mylyn task editor,"Preventive changes, Corrective changes",preventive,,test,remove unused,,,
https://github.com/eclipse/linuxtools/commit/c2fa38c13d386c1be4c6bfe2d436c2f06df93a85,rpm: remove unused class nothing refers to nonrulebaseddamagerrepairer,Preventive Changes,preventive,,test,remove unused,,,
https://github.com/eclipse/linuxtools/commit/d1b75ec5cd98668f789f46200ff32fb08d0f0146,rpm: move rpmutils class to internal package the package wasn't exported in manifest but wasn't in internal package either,Preventive Changes,preventive,,test,move to,,,
https://github.com/eclipse/linuxtools/commit/66a2c61756dda0fa425ba5007230226a0abd8837,rpm: cleanups * inline singular fields * remove useless modifiers * remove useless local vars before return * don't uselessly catch exception * more efficient string concatenation,Preventive Changes,preventive,,test,remove useless,,,
https://github.com/eclipse/linuxtools/commit/1d14fdc2a3bcb88f8b9290b7e00852c242d58b17,remove unused classes in docker core and ui plugins,Preventive Changes,preventive,,test,,,,
https://github.com/eclipse/linuxtools/commit/2fdb20264afaec512775beff543e9c76dd6ff35f,475235 - expose search images dialog moving imagesearch wizard to a public package but keeping the wizardpage in the internal package,preventive Changes,preventive,,test,moving to,,,
https://github.com/eclipse/linuxtools/commit/88bf12251db804f23143f9f1aabc18092614b444,468606 - remove the docker connection settings in the workbench preferences,Preventive Changes,preventive,,test,remove,,,
https://github.com/eclipse/linuxtools/commit/ba8775882ed70156f6262c5952e1d388f5a63044,systemtap: remove deprecated systemtapprocessfactory it is causing java 8 javadoc to throw errors and better to remove deprecated class then fixing its javadoc bump the major to reflect api change,Preventive Changes,preventive,,test,remove deprecated,,,
https://github.com/eclipse/linuxtools/commit/2dfe9a9f693dbb67f0b240579c4554e7d5a498d3,systemtap: remove non-default constructor in refreshhandler modifiy refreshhandler to use only a default constructor so that it may be properly instantiated by the handler service,Preventive Changes,preventive,,test,remove,,,
https://github.com/eclipse/linuxtools/commit/aa10e5b5fa62bc80a92ff8bfa192888db113defe,"systemtap: refactor regex generator into its own class the feature for generating regexs from the ""printf"" statements in a stap script was originally included in systemtapscriptgraphoptionstab refactor it into its own class so that it may be easier to use in",Preventive Changes,preventive,,test,refactor easier,,,
https://github.com/eclipse/linuxtools/commit/11cab7a5b40f3f7104d22bc2f98ff332126d0477,tmf: move synchronization supplementary files to a folder this way analysis on experiments can put synchronization-related supplementary files in this folder and they will be preserved once the traces are updated after synchronization by default the synchronization file was preserved but all other supplementary files were deleted now the entire folder is preserved,Preventive Changes,preventive,,test,move,,,
https://github.com/eclipse/linuxtools/commit/35b578275af990b04c7e72ffe432c714c280f861,remove empty listener this seems useless to me,pre,preventive,,test,remove useless,,,
https://github.com/eclipse/linuxtools/commit/f919d00f5b8259865397e2718842a20f6e9cd41c,tmf: move the fully incremental synchronization algorithm to internal,Preventive Changes,preventive,,test,move to,,,
https://github.com/eclipse/linuxtools/commit/a64af6d3367f65caa694fb05b4af430536f40b8a,systemtap: migrate openfileaction to commands also perform other housekeeping tasks related to migrating from actions to commands,Adaptive Changes,adaptive,mismatch,test,migrate to,,,
https://github.com/eclipse/linuxtools/commit/623982979af67709387f831295aa033e6682ebd5,systemtap: minor cleanup notably move (abstract)chartmousemovelistener to public api,Preventive Changes,preventive,,test,cleanup move,,,
https://github.com/eclipse/linuxtools/commit/0db98ccfc8a86a2a9ba1c956af5eef827a64b028,tmf: remove unnecessary global action handlers these actions were no longer necessary since the menu contributions were changed to use the global command ids in commit 9625626 the delete action is also removed from the context menu when the selection contains a mix of traces folders or experiments,Preventive Changes,preventive,,test,remove unnecessary,,,
https://github.com/eclipse/linuxtools/commit/ca725d47dc4316bf434534ba43f0428322fcc028,cleanups * member to variable * stringisempty usage * unnecessary local before return * naming conventions * integer instantiation * dead store to local variable,Preventive Changes,preventive,,test,cleanups,,,
https://github.com/eclipse/linuxtools/commit/4f338c8d058add881bde9463f3d3b4bfcb979f9d,more cleanups * empty statements * this final field could be made static * member could be replaced by local variable * 'static' modifier out of order with the jls suggestions * strings handling * unused parameters * unnecessary local before return,Preventive Changes,preventive,,,cleanup replaced,handling unused unnecessary,,
https://github.com/eclipse/linuxtools/commit/b6129d7f949767d84bf3d3c35a16f61d20d11312,lttng: remove dependency to lttngkerneltrace in lttng kernel analysis module the helper's appliestotracetype and the analysis's canexecute methods already verify if a trace has the necessary requirements to be able to execute the analysis and it shouldn't matter if it's not the same class also added a unit that the execution of the analysis itself,Preventive Changes,preventive,,,remove dependency,shouldnï¿½t matter not same,added,
https://github.com/eclipse/linuxtools/commit/f32fcc7b4d90c4be3fdf1cbf1dea993ad72bb0f4,various cleanups * unused public or protected field * javadoc fixes * unread public/protected field * unused imports * unused modifiers * avoid modifiers which are implied by the context,Preventive Changes,preventive,,,cleanups unused,,added,
https://github.com/eclipse/linuxtools/commit/11c45b5c69e73721b190798c3443d9996e80e2db,profiling: remove profilelaunchconfigurationtab having an abstract class for a marker is not needed especially if we have another abstract class that is the only one that extends this one,Preventive Changes,preventive,,,remove extends,not needed,,
https://github.com/eclipse/linuxtools/commit/910d71dbb5bd12b4eaca5237daf5bc6f363dbea4,tmf: split the state system in a separate plugin tmf will depend on this new plugin but it will allow the state system infrastructure to be used outside of tmf no need for a new feature though since this is not a user-visible feature (the tmf feature will include this new plugin),Preventive Changes,preventive,,,split separate,not need not feature,allow used,
https://github.com/eclipse/linuxtools/commit/cd066c4824b488d793d1da11b8cd25b0a2a0af49,profiling: retire profilelaunchconfigurationdelegate it was serving no point but to add one exec method which is better to be together with the other similiar methods in cdtspawnerprocessfactory,Preventive Changes,preventive,,,retire better together,add,,
https://github.com/eclipse/linuxtools/commit/3f6928702ec546662c4ed66a6d27a502d178c722,ctf: remove false positive in the case of cross-packet events,Corrective Changes,preventive,mismatch,,not preventive,,,
https://github.com/eclipse/linuxtools/commit/584f23a6868aae533a726052ec71b1377a973370,"tmf: cleanup tmfstatevalue to remove 1-level of indirection this is a refactoring to diminush the memory usage of the statesystem in the current implementation each tmfstatevalue has a ""box"" for an other object (ie integer double string ) we propose to remove this indirection and use the raw type inside the corresponding type as an example integerstatevalue now contains an ""int"" instead of an ""integer""",Preventive Changes,preventive,,,cleanup remove refactoring,instead,diminish usage implementation,
https://github.com/eclipse/linuxtools/commit/38b5d28eb185cdee37a452d312f9ca91a2c7af2f,tmf: remove legacy import wizard,Preventive Changes,preventive,,,remove,,,
https://github.com/eclipse/linuxtools/commit/2f047bfcbc8d2233f610bd0bef67d739dd809619,tmf: remove unused tmfsortedarray this data-structure seems unused it's implemented with an insertion sort and won't scale,Preventive Changes,preventive,,,remove unused,implemented,wonï¿½t,
https://github.com/eclipse/linuxtools/commit/f4e31267a25f506a08e3faa34a908f52f29f350a,ctf: remove unused streaminputreadercomparator this is a clone of streaminputreadertimestampcomparator,Preventive Changes,preventive,,,remove unused,,,
https://github.com/eclipse/linuxtools/commit/4e946420e7e5e236c82b6e2ae7895592d2b0748b,tmf: change abstract class tmfnetworkmatchdefinition to interface,Preventive Changes,preventive,,,change to,,,
https://github.com/eclipse/linuxtools/commit/5c38d2413dde178c85457e0d0f092e949fda25cd,tmf: clean up tmfcoretrace package move some notions out of this packages and into their own: - tmfcoretraceindexer (for the itmftraceindexer interface) - tmfcoretraceindexercheckpoint (for the checkpoint indexer) - tmfcoretracelocation (for itmflocation and its gang) this will prepare the grounds for the upcoming on-disk b-tree indexer,Preventive Changes,preventive,,,clean up move,,,
https://github.com/eclipse/linuxtools/commit/12aa1bcc0f93742b549445f5731369d0fdbd84d8,tmf: remove the concept of block size in event requests this hasn't been used in a while so we can remove all references to it,Preventive Changes,preventive,,,remove,hasnï¿½t use,,
https://github.com/eclipse/linuxtools/commit/f0bb4d8d3c41187132546297bbfa846d51dcc37d,tmf: remove the environment variables view the trace properties were moved to the properties view in master (see so this view is now redundant,Preventive Changes,preventive,,,remove move,,,
https://github.com/eclipse/linuxtools/commit/72759a60609eee6a5fe0523d47e164324d45fedc,tmf: replace itmftimestamp by long in itmfstatistics api some methods in the statistics imlementations can call each other and having to create new wrapper objects every event is not very interesting the normalization already happens in the statistics view anyway,preventive Changes,preventive,,,replace wrapper,implementations create new,not very,
https://github.com/eclipse/linuxtools/commit/21c050d8f35b4c53cdc85dc420c03d68754abcda,tmf: drop the use of tmffixedarray for statistics the same behaviour can be achieved by using straight [] arrays and varargs methods that way we don't need to instantiate new wrapper objects all the time unit were also updated,preventive Changes,preventive,,,drop use wrapper,donï¿½t need,update,new
https://github.com/eclipse/linuxtools/commit/b136726597a63ceab8db99e2f45f0d6509de7805,tmf: expose getstatesystem() up to itmftrace the default implementation in tmftrace will not provide any state system for now sub-classes need to specify their own,confused,preventive,,,expose,not provide,implementation,
https://github.com/eclipse/linuxtools/commit/836ec60e4b9ab2357737d43e38a26cc363bf3c5a,make the tmflocation final and get rid of clone() - make flocation final - make tmflocation concrete classes 'final' - remove clone() - not needed anymore - fix cases,preventive Changes,preventive,,,remove,not needed,,
https://github.com/eclipse/linuxtools/commit/9c7bfd656079caefeb07b8038597a5b6e7866376,tmf: add an abstract class for the statechangeinput the state-change-input plugin needed by the state system is currently offered through a istatechangeinput interface however much of the code is common between implementations furthermore the lttng kernel plugin nicely splits the work in two threads so it would be great to be able to easily re-use that feature this introduces a abstractstatechangeinput class which will provide a good ground base for building a state input plugin it will also wrap the multi-thread part of the code so other inputs can benefit from it the interface remains available for more exotic use cases,preventive Changes,preventive,,,split wrap,implementations work introduces provide features,more,
https://github.com/eclipse/linuxtools/commit/b22c098a403c011a3e0b5a638f1611e676ee012f,re-factor and freshen up tmfcoretracer (previously tracer) summary of main changes: - renamed oelinternaltmfcoretracer to tmfcoretracer - removed the error/warning/info tracing classes (already handled by activator),preventive Changes,preventive,,,freshen,,,
https://github.com/eclipse/linuxtools/commit/994836b64c0bf05d653445b66f75c568fe164462,tmf: enhance tmfeventfieldtostring() to also print sub-fields move the logic to print sub-fields of a tmfeventfield into the base class' tostring() method this removes the need for a specific ctftmfcontent type,Preventive Changes,preventive,mismatch,,move removes,enhance,,
https://github.com/eclipse/linuxtools/commit/1ff9cea5c455391fd546e9a787d9b16cc5e6148a,drop the legacy lttng 0x plugins here comes the axe lttng 0x has been unsupported upstream for more than 2 years now the plugins themselves haven't received any new development since then we plan to drop support for lttng 0x in linux tools 20 it will remain supported in the linux tools 1x branch this will open the door for some future improvements that were impossible to make with this codebase still around for example immutable timestamps in the framework,confused,preventive,,,drop support,unsupported new improvements,havenï¿½t impossible,framework tool
https://github.com/eclipse/linuxtools/commit/ebbcbf16e07dd3ec39455c3cf7f9aca8ce22d88c,tmf: fold istatesystemquerier2 back into istatesystemquerier let's make use of the api break to re-simplify those interfaces also dropped one of the range query methods it is covered by the new one,preventive Changes,preventive,,,fold back dropped,new,,
https://github.com/eclipse/linuxtools/commit/462a899d077ede54a8f722a6627f1e421e28a055,tmf: drop generics from itmftrace and tmfexperiment most of the generics are redundant now that we have interfaces in this case the itmfevent type is always implied lots of lines affected but most of it is just removing the stuff in brackets fixes,preventive Changes,preventive,,,drop removing,fixes bug,,
https://github.com/eclipse/linuxtools/commit/b42e29ae563e42f0ba43e9492e78d1ae5b5b0d61,revisit the tmfexperiment structure,preventive Changes,preventive,,,revisit structure,,,
https://github.com/eclipse/linuxtools/commit/b9a67efd8ec577f939b500e5e19ba3c2c05a2339,systemtap: using dataviewerspiechart in systemtap this removes completely birt from systemtap,preventive Changes,preventive,,,removes,,,
https://github.com/eclipse/linuxtools/commit/4d0fda7fc6b10dc8af088d97bd3efcc95eff26e9,remove unneeded things from the activator,preventive Changes,preventive,mismatch,,remove unneeded,,,
https://github.com/eclipse/linuxtools/commit/3ea650c3772513266f1685d1e7a6fc8b04b72d8f,systemtap: removing unused properties,preventive Changes,preventive,,,removing unused,,,
https://github.com/eclipse/linuxtools/commit/72b88da92216b7016bc8ae38a4e8384ce28fe871,systemtap: removing chartcanvas and chartwithtooltipcanvas this classes were not used at all there were some references but they were incorrect,preventive Changes,preventive,,,removing,not used incorrect,,
https://github.com/eclipse/linuxtools/commit/2bf78bc1f6f3b398c5f03824170c72548e903e6d,systemtap: move update functions to abstractchartbuilder and also adapt them to work with swtchart,preventive Changes,preventive,,,move,update adapt to work,,
https://github.com/eclipse/linuxtools/commit/2919a69f6f41680224803d99f3acec8590370540,change certain classes to use itmfevent instead of tmfevent,preventive Changes,preventive,,,change,use instead,,
https://github.com/eclipse/linuxtools/commit/db84236f306566512b5ee7881c556612e362ca99,systemtap: removing birt dependency from chartwidget package,Preventive Changes,preventive,,,removing dependency,,,
https://github.com/eclipse/linuxtools/commit/31ca2027f3fc74f92b17848ce415152079d01ff8,initial commit of switching dataviewerscharts from birt to swtchart delete all birt dataengine functionality and remove all birt related functionality that is being unused,preventive Changes,preventive,,,switching remove delete,unused,,
https://github.com/eclipse/linuxtools/commit/aeed6b915c07739fd32baa04a641a21ef6f4a998,restore lttng project wizard (and related classes) that were inadvertently removed in a previous commit,preventive Changes,preventive,,,restore remove,,,
https://github.com/eclipse/linuxtools/commit/82894b99eb766fabb693ce174f8fa69532253ee1,remove the obsolete lttng project view,preventive Changes,preventive,,,remove obselete,,,
https://github.com/eclipse/linuxtools/commit/f7efeaa532b275ee39c3050d637ac2bb866b4cfc,refactor itmfdataevent to itmfdataitem,preventive Changes,preventive,,,refactor,,,
https://github.com/eclipse/linuxtools/commit/399e5b92c579103627008ea18fb458e1fde69491,refactor tmftimestamp as per the updated tmf event model,preventive Changes,preventive,,,refactor,updated,,
https://github.com/eclipse/linuxtools/commit/f89a2db5ad08fd08eb71b9ee827b565e809acf02,change event reference from tmfeventreference to string,preventive Changes,preventive,,,change,,,
https://github.com/eclipse/linuxtools/commit/46aa3313842163e4e1cb77dab8d4ace77a634fa4,rewrite featurexml based stubby on top of xpath this is needed because oeupdatecore is scheduled for removal in juno additionally this makes it pretty similar to the pomxml generation allowing for further generification of the generation process,preventive Changes,preventive,,,rewrite removal,,,
https://github.com/eclipse/linuxtools/commit/a2acd5f83e24b878991c75e49bbfc0389b3218c4,remove unused import statement,preventive Changes,preventive,,,remove unused import,,,
https://github.com/eclipse/linuxtools/commit/b06a8b3e88216239c4b45041ee71b0f84abdbce5,switch iremotecommandlauncher to return process * src/org/eclipse/linuxtools/profiling/launch/iremotecommandlauncherjava (execute): change to return process * src/org/eclipse/linuxtools/internal/profiling/launch/locallauncherjava (execute): ditto * src/org/eclipse/linuxtools/profiling/launch/iprocessjava: removed * src/org/eclipse/linuxtools/internal/profiling/launch/localprocessjava: ditto,preventive Changes,preventive,mismatch,,switch remove,,,
https://github.com/eclipse/linuxtools/commit/9c175328b9f57ec366a9feaf4b0c7008838e59dd,switch rdt remote command launcher to use process * src/org/eclipse/linuxtools/internal/rdt/proxy/rdtcommandlauncherjava (execute): switch to return process use remoteprocessadapter class to wrap the iremoteprocess,preventive Changes,preventive,mismatch,,switch wrap,use,,
https://github.com/eclipse/linuxtools/commit/de9a25f317bb69a35e8e07a36dd1c35a128d82b1,initial commit of moving valgrind massif away from birt and to using swtchart for the rendering of the memory chart,Preventive Changes,preventive,,,moving,intial,,
https://github.com/eclipse/linuxtools/commit/6eb96d6aa0ff3177ab39cf8242545559ddd5a548,re-structure lttng sub-project as per the linux tools guidelines,preventive Changes,preventive,,,,,,
https://github.com/eclipse/linuxtools/commit/0513f1fc6a3ff095d33d47984e6ff1577d11a830,removing valgrind preference page this page is not longer needed because we will be able to set the linuxtools path environment variable in project properties changelog: * src/org/eclipse/linuxtools/internal/valgrind/core/valgrindcommandjava: removing dependency for valgrindpreferencepage * src/org/eclipse/linuxtools/internal/valgrind/core/valgrindpluginjava: removing dependency for valgrindpreferencepage * src/org/eclipse/linuxtools/internal/valgrind/core/valgrindpreferencepagejava: removing this preference page this page is not longer needed because we will be able to set the linuxtools path environment variable in project properties * src/org/eclipse/linuxtools/internal/valgrind/launch/valgrindlaunchpluginjava: removing dependency for valgrindpreferencepage * src/org/eclipse/linuxtools/internal/valgrind/core/valgrindcommandjava: removing dependency for valgrindpreferencepage * removing dependency for valgrindpreferencepage * removing dependency for valgrindpreferencepage * removing dependency for valgrindpreferencepage,preventive Changes,preventive,,,removing dependency,not needed,,
https://github.com/eclipse/linuxtools/commit/47cb2c70c92e57317b393da8422d69f6f140cb34,move out the progress monitor job from experiment indexing thread,Preventive Changes,preventive,,,move,,,
https://github.com/eclipse/linuxtools/commit/0036e37301ba910bc3b65e81f380cd5413e0f09f,rebase newlttngprojectwizard on tmf,preventive Changes,preventive,mismatch,,rebase,,,
https://github.com/eclipse/linuxtools/commit/3c0b626bad6d288c5bc7cda0d0ed87170c504839,remove unneeded parts,Preventive Changes,preventive,,,remove unneeded,,,
https://github.com/eclipse/linuxtools/commit/2268b45080840f3e7fa21fc9dfd0e8212d199788,remove old releng stuff,Preventive Changes,preventive,,,remove old,,,
https://github.com/eclipse/linuxtools/commit/e46697caf5ab30c48b450d59cc5705b01676da95,add link/label editing support to osio rest mylyn connector - add new classes: linkresponse osioaddlinksattributeeditor osiorestdeletelink osiorestdeleterequest osiorestpostnewlink workitemresponse - add new editor constants to iosiorestconstants - modify osiolabelattributeeditor - add new methods to osiorestclient to fetch all workitems for a space and to get the link types for a space - fix osiorestconfiguration to not use getspacebyname when a work item is for an external space - fix osiorestgettasklinks to properly use reverse name and target workitem name - modify osiorestgettaskdata and osiorestgetsingletaskdata to store the spaceid into a new space_id attribute - add label options to the label field - add new link editor to osioresttaskeditorpage - add new fields to osioresttaskschema,"Preventive changes, Corrective changes",perfective,mismatch,,add support new modify properly,fix not use,,
https://github.com/eclipse/linuxtools/commit/5b4ec5e39a8acb75deee74ce460f513dab8da3bc,495600 - improve ui for docker reconnection use case - make fixes to dockerexplorercontentprovider class - add new openretry() method to dockerexplorercontentprovider that starts a job to continuously try to open a connection and ping it until successful,Perfective Changes,perfective,mismatch,,improve use add new,make fixes,isnï¿½t not,
https://github.com/eclipse/linuxtools/commit/df4baa493a0d43887fb9ce2d7dd407791f73b653,494926: arrayindexoutofboundsexception in runimagemaintab - change commandutilsgetcurrentconnection to fall back to first active connection (not just first connection) - have dockerimagesview and dockercontainersview use commandutils to get the default connection (ie first active connection) - add checks in runimagemaintab to look for no active connection and set an error message if that is the case - add similar checks in runimagevolumestab runimageresourcetab and runimageenvironmenttab - use commandutils for default connection in runimagelaunchconfigurationtabgroup - add new wizard message for inactive connection,Corrective Changes,perfective,mismatch,,add new,no connection error message,fall back,
https://github.com/eclipse/linuxtools/commit/92e687c26559b2b2ae11560eee61a5dd113d2ef9,471670 - better support cases where the docker connection is lost refactoring the dockerconnection to handle 3 states: - unknown (connection was not opened) - established (connection was opened and docker responded to ping) - closed connections are in unknown state by default and opened when node is expanded in explorer view or list of containers or images is loaded connection is set back to unknown state when the settings are changed,Perfective Changes,perfective,mismatch,,better support,,refactoring,
https://github.com/eclipse/linuxtools/commit/3c33ab2331bc382026c80162e95195931e16bfb8,494521 - npe when new docker connection dialog is open on windows prevent returning connection settings when the docker_host environment variable was not found on environments where docker toolbox was installed there might not be any docker_host etc env variables set but there is a 'docker_toolbox_install_path' env var which means that the exit code of the script is '0' and from there the 'createdockerconnectionsettings' is called this method noew returns 'null' if the docker_host property is missing,Corrective Changes,perfective,mismatch,,new prevent,not found might not any,,
https://github.com/eclipse/linuxtools/commit/34c1b20c11f31ef25aeecfb85e5385e7332a68d5,494513 - build image function of docker tooling shows no message on console using the buildimagejob to build the image this job already takes care of sending the output logs into the console view,Perfective Changes,perfective,mismatch,,build takes care,,,
https://github.com/eclipse/linuxtools/commit/9026379cbcbd40d58eda7bacc7935b5ef748e033,444943 : path for gcov tools update the major version of orgeclipselinuxtoolsbinutils,Perfective Changes,perfective,,,not preventive,Update version AAA,,
https://github.com/eclipse/linuxtools/commit/e2fa64c3a4d348b53a8f44c8242cebffc9a75b6c,force property to run once again after viewers are refreshed even if a selection is preserved the property do not seem to run again (forcing enablement updates) therefore we need to manually select the proper element,confused,perfective,,,force again proper,do not run,,
https://github.com/eclipse/linuxtools/commit/d97502b08fc82e2aaf9ae5c7c76ebe018aa6e3c0,479336: add support for an interactive shell into started container use the execcreate/execstart api calls from docker-client and passing in '/bin/sh' to get an interactive shell into any container this is particularly useful for container that have services in the foreground,Perfective Changes,perfective,,,add support use,services,,
https://github.com/eclipse/linuxtools/commit/2f7d888d41e101e3af50566af6843a5abb9e2ef8,481629: add support for pushing images to a docker registry account - consult local files when authenticating against a registry - fix the progress strings to reflect the 121 api - fix division by zero error and improper string translation,perfective Changes,perfective,mismatch,,add support,fix error,,
https://github.com/eclipse/linuxtools/commit/efb0a7504a145587fbe624783bfb89455849e91a,469372 - improve contextual menus added a show in>properties context menu for: - connections - images - containers added swtbot to verify that the menus are available and that the properties view is opened when clicking on the menu,Perfective Changes,perfective,,,improve added,,,
https://github.com/eclipse/linuxtools/commit/8f8059e1dad19d03226a3c289ae5b7e30172eb46,484413: implement 'package' command - add command handler for creating a box from a vm - add wizards for specifying name and folder to place the new box,Perfective Changes,perfective,mismatch,,implement add handler new,,,
https://github.com/eclipse/linuxtools/commit/c0797db1aefdf57543b2f0d11c6c203813d9d3e4,484173 - missing container name validation in launch config editor refactoring the validators to be called in the isvalid() method and not by the databinding context (since it is not attached to the editor as it can be with wizards),Corrective Changes,perfective,mismatch,,missing,not by,refactoring,
https://github.com/eclipse/linuxtools/commit/6f9fdd5a3003bdc92d0cadeb3c84869cc0e934d2,483796 - missing settings when re-using launch configuration saving and restoring memory limit and cpu shares in the launch config setting the ui widgets to the initial value from the model loaded from the launch config actually using the memory limit and cpu shares in the dockerhostconfig when creating the container (was not implemented),Perfective Changes,perfective,mismatch,,missing restoring initial using creating,,,
https://github.com/eclipse/linuxtools/commit/d7f36dfa7f5fe8168c5bbb759d82f8c849259d9c,author: slava risenberg [447553] added support for c code libhover metadata generated from doxygen,Perfective Changes,perfective,mismatch,,added support,,,
https://github.com/eclipse/linuxtools/commit/3e3dd8de7d0993f3321bd3226974b4b30f328a97,oprofile: add initial support for ocount command line tool - add a new tool to the oprofile launcher (ocount) - add a new view to oprofile ui (ocountview) - don't bring up oprofile view or do opreport when we are doing an ocount - separate the output of ocount into the application output and the ocount output - display the ocount output into the ocount view (text viewer),Perfective Changes,perfective,mismatch,,add initial support new tool,,,
https://github.com/eclipse/linuxtools/commit/96c7f7c5137915641e6a157f79670b3f021e9722,468849 - don't use new shell for dockerfile editor dialog - fixed to use container's shell from imagebuildpage,Perfective Changes,perfective,mismatch,,use new,donï¿½t,,
https://github.com/eclipse/linuxtools/commit/d0abccfef634f9376f4c754f2ac649cae09ae275,docker: enable compiler warnings and fix them in dockercore,Perfective Changes,perfective,mismatch,,enable,fix,,
https://github.com/eclipse/linuxtools/commit/e18d02eae69d7f65320a17ff43d7a17899d39b41,docker: enable warnings and fix them in dockerui,Perfective Changes,perfective,mismatch,,,,,
https://github.com/eclipse/linuxtools/commit/1c076c65b0f2c51399326b1be75279766f32a441,tmf: missing delete action in filter dialog of colorsview 458582),Perfective Changes,perfective,mismatch,,missing,delete action,,
https://github.com/eclipse/linuxtools/commit/599920a5802bfa078c242959dfe84c25bc566155,tmf: support preprocessing of in the texttrace class 458578,Perfective Changes,perfective,mismatch,,support,,,
https://github.com/eclipse/linuxtools/commit/65f45c4e16870192967d685e206a0147e36784f3,systemtap: improve no-stap errors,Perfective Changes,perfective,,,improve errors missing allow,error dialog donï¿½t have,,
https://github.com/eclipse/linuxtools/commit/f81e025ca9c820f008b322322443a49a16500a06,"statesystem: remove duplicate empty state creation the transient state already creates a ""null"" value for every state attribute that is added no need for the attribute tree to do an explicit insertion immediately after (which gets ignored any way) that attribute tree should also keeps its paws off the transient state but that's a different problem",Preventive Changes,perfective,mismatch,,creation added,no need,remove duplicate,
https://github.com/eclipse/linuxtools/commit/77ec399ca66b6b9ce7151f43186904044a1b13c3,tracing rcp: save workspace during shutdown,Perfective Changes,perfective,mismatch,,save,,,
https://github.com/eclipse/linuxtools/commit/9e2c0dbd5a5784d438da49071b1ff008e7bd7afc,tmf: add filter for collapsing of events in event table,Perfective Changes,perfective,,,add,,,
https://github.com/eclipse/linuxtools/commit/c8227087ad6594c334fdf42501eb1c9d25f02cf6,tmf: add interface for collapsing of events,Perfective Changes,perfective,mismatch,,add,,,
https://github.com/eclipse/linuxtools/commit/fce9074795e7473856d6eb24231a685a85d6c5e6,tmf: add cycles time format and delta format in time graph,Preventive Changes,perfective,mismatch,,add,,,
https://github.com/eclipse/linuxtools/commit/25a1589d03a9ae04419d7a9b3622d35ffb628332,tmf: provide (internal) api to customize import trace wizard page,Perfective Changes,perfective,mismatch,,provide,,,
https://github.com/eclipse/linuxtools/commit/d3740f60c4deedb122ba1d7cbfda7fa4dae15033,gdb: improve gdb trace file validation,perfective Changes,perfective,,,improve,,,
https://github.com/eclipse/linuxtools/commit/aaa5478d1d4dad2a5f842f0ee4afb9dc53480048,tmf: support tool tip for arrows in time graph the tool tip will show the time link event information of the closest arrow to the mouse position provided that it is within 5 pixels holding the shift key will disable the arrow tool tip so that the tool tip can show the information of the underlying state,perfective Changes,perfective,,,support tool,,,
https://github.com/eclipse/linuxtools/commit/b409966b5ac3fd39b3bdaaceecaeffe4aa9092e5,tmf: added support for process filter in the timegraphfilterdialog on top of the filter dialog a text field enables filtering over the tree of process names a node of the tree is shown if: - the node matches with the search pattern - one of the children of the node matches with the search pattern - one of the parents of the node matches with the search pattern the buttons check-all and check-subtree check only the visible items the button uncheck-subtree unchecks all the children (the hidden children too since it makes no sense a checked child with an unchecked parent) the button uncheck-all unchecks everything except the hidden roots (and corresponding subtrees),perfective Changes,perfective,,,added support,,,
https://github.com/eclipse/linuxtools/commit/e8d9ac36cb22505780826d5335ead36b75befb27,tmf: support category in custom parser wizards,Perfective Changes,perfective,mismatch,,support,,,
https://github.com/eclipse/linuxtools/commit/c1309907623a4fc6e3b87464f7c21c162adcfab8,tmf: add category to custom parser definition,Perfective Changes,perfective,mismatch,,add,,,
https://github.com/eclipse/linuxtools/commit/e25ab73d894f4df5d90c7f980aa8e70d8ae55536,"rpm: add ""stop"" feature for builds allow stopping an rpmexportoperation to actually have an effect also add a stop button on the rpm console",Perfective Changes,perfective,mismatch,,add feature allow,,,
https://github.com/eclipse/linuxtools/commit/06d065bd6394ff80029a26ec55aa8258992ed997,408543 - implemented first time auto-enable-checkboxes for gprof if the user launches gprof and it is not enabled in the options then the user will now be prompted if he wants to have the option enabled for him automatically if so the option is enabled and project is rebuild incremented version numbers in feature and gprof,Perfective Changes,perfective,mismatch,,implemented feature,not enabled,version,
https://github.com/eclipse/linuxtools/commit/78072af745bb9f33a47c3df7e6f530efcd06e039,"ctf: provide a utility for ""safe"" mapping of a bytebuffer this works around a on windows which prevents deleting a file after it was mapped see running traceseekbenchmark i noticed a 10% decreased in performance (38s vs 34s) on windows on linux the difference is negligible (241s vs 240)",Perfective Changes,perfective,,test,provide a utility,,,
https://github.com/eclipse/linuxtools/commit/0e02353dc0d8977bb23ddb8bd7980c7529c2089a,tmf: lttngcontrol: mi: support session creation,confused,perfective,,test,support creation,,,
https://github.com/eclipse/linuxtools/commit/30393d6d3c60dd52f74710f7c07aa9ffdaaa9569,tmf: lttngcontrol: mi: support of domain channel and event listing,perfective Changes,perfective,,test,support,,,
https://github.com/eclipse/linuxtools/commit/e3253b1a2fcf9796eaf585810c0d248b8f3250ab,tmf: lttngcontrol: mi: basic listing support,perfective Changes,perfective,,test,basic support,,,
https://github.com/eclipse/linuxtools/commit/267b20904f43d89a57c32fe3ff60e78e8a5e61c1,408543 - implemented shared api for enabling checkboxes programatically this code is used buy subsequent commits of gcov/gprof - cprojectbuildhelpersjava : contains methods to programtically enable project settings also methods to identify project types also methods to rebuild projects (needed after enabling settings) - messagedialogsyncedrunnablejava: extended messagedialogue to work from background threads - titleareadialogwithradiobuttonsjava: message dialogue with radio options neat way to seperate gui and functional code,Perfective Changes,perfective,mismatch,test,implemented for enabling,,,
https://github.com/eclipse/linuxtools/commit/bb0f2e477fa0d12de1de211bbc6a47772993fead,"tmf: introduce itmfeventtablecolumns and its extension point instead of accidentally specifying the whole event table trace types can now only define the columns they want this allows more (most) trace types to use the default tmfeventstable which in turn allows more trace types to be ""aggregated"" together in one table when put together in the same experiment the previous ""eventstabletype"" extension remains there 1) for compatibility purposes but also 2) for trace types that do very specific things with their event table and need to override the default one (ie gdbtrace) if a trace type provides both extension points we'll first try to give it its event table (ignoring the itmfeventtablecolumns info) and if we can't because we're within an experiment for instance then we'll fallback to just use the columns",Adaptive Changes,perfective,mismatch,test,introduce,,,
https://github.com/eclipse/linuxtools/commit/c122e48c48dfa1f66b810e863210f1bc7048dca5,tmf: implementation of ustmemoryanalysismodule requirements the events needed by the analysis are added as requirements we also add the information that the libc with probes should be loaded prior to starting the trace session,Perfective Changes,perfective,,test,implementation of requirements,,,
https://github.com/eclipse/linuxtools/commit/b2080ff46b7fb7d282b337862b1d62bc02f83d90,tmf: add an analysis requirement helper the helper can get lists of requirement values from one or several analysis requirement providers,perfective Changes,perfective,,test,add requirement,,,
https://github.com/eclipse/linuxtools/commit/4dd4cd835d76289f0cae5ceba3549091db326a74,"tmf: use selected destination trace folder in batch import wizard however if a project is selected in the last wizard page the destination is set to that project's ""traces"" folder",Perfective Changes,perfective,mismatch,test,use selected,,,
https://github.com/eclipse/linuxtools/commit/899220c1f1d842c50cf2abf492e3f7c35b5f8663,"tmf: support open trace to selected trace folder make the open trace file and open trace directory commands import the trace to the selected folder instead of the project's ""traces"" folder also fixed link validation to accept info and warning return status",perfective Changes,perfective,,test,support make,,,
https://github.com/eclipse/linuxtools/commit/619fcd4837856d851686a4ac39ebfb3d24861b55,tmf: update drag and drop to support trace folders - support drag and drop to any trace folder - support drag and drop from any trace folder - fix drag and drop to experiment from external source of a trace already in project - fix unnecessary creation of target supplementary folder when source doesn't have a supplementary folder - align trace rename scheme with import wizard,"Perfective changes, Corrective changes",perfective,,test,support,,,
https://github.com/eclipse/linuxtools/commit/11f869fcb7e7e86b1f441513d02dad86990991b6,tmf: implement analysis requirements for config element helpers,perfective Changes,perfective,,test,implement requirement,,,
https://github.com/eclipse/linuxtools/commit/33fd02d5b7047bedf174413126371b124af39fe7,tmf: possibility to generate a session configuration from a isessioninfo with this feature we are able to generate a xml session configuration which can be used to recreate a trace session on the target side,Perfective Changes,perfective,mismatch,test,feature able,,,
https://github.com/eclipse/linuxtools/commit/f08c35fff5374f647e2f09dc33ccf0fe860cb6a7,"revert ""tmf: add an analysis requirement helper""",confused,perfective,,test,,,,
https://github.com/eclipse/linuxtools/commit/13df50ce83e1c57b7d3750a9da8e055b6be3f1d2,tmf: add an analysis requirement helper the helper can get lists of requirement values from one or several analysis requirement providers,perfective Changes,perfective,,test,add requirement,,,
https://github.com/eclipse/linuxtools/commit/8bafa137f246e165c600310b587be2b4363cb705,systemtap: improve function/c probe addition -make general improvements to the way functions and probes are added to scripts with their respective views -migrate plugin implementation of inline-probing c files from actions to commands -when inline-probing c files ask user for the stp script to add the probe to,perfective Changes,perfective,,test,make improvement,,,
https://github.com/eclipse/linuxtools/commit/3a727a995c3205650af794fb0c141893e8e4cefd,tmf: introduce the xml state system view for data driven outputs,Perfective Changes,perfective,mismatch,test,introduce,,,
https://github.com/eclipse/linuxtools/commit/624034d8e8b92a1b02f9b7a420e5499d1eba611f,lttng: add filtering textbox to the event selection composites,perfective Changes,perfective,,test,add to,,,
https://github.com/eclipse/linuxtools/commit/7b4a7b700332b70d59af59c23ea1f51a9f8eae98,tmf: add an xml model factory and classes for read-only state system components factory for xml model element used in a read-only context the state attributes will not be added to the state system,Perfective Changes,perfective,mismatch,test,add for,,,
https://github.com/eclipse/linuxtools/commit/71c4ad3fdceee7d074c5a8f677bb5b726123f95a,tmf: add new xml analysis project empty project where the data-driven xml analysis will be added,Perfective Changes,perfective,mismatch,test,add new,,,
https://github.com/eclipse/linuxtools/commit/e885d4489a7ed7e2cc4166fa8012ae97423abd7e,ctf: throw ctfreaderexception in the bitbuffer api instead of the hard-to-catch bufferoverflowexception this ensures that users of the library handle cases where the trace reader fails to read correctly (corrupted traces twisted traces etc),perfective Changes,perfective,mismatch,test,ensures handle,,,
https://github.com/eclipse/linuxtools/commit/c7bdaea6bde593b23c80c453b1a197f2c3b852a9,"tmf: add function name mapping to the callstack view initial version of the ""function name mapper"" for the callstack view it currently only supports a text file listing addresses followed by names like the output of ""nm [binary] > outtxt"" the next steps will be: - add support for reading the binary directly by tapping into the relevant cdt components - add a separate dialog that shows the currently imported file name(s) - add support for dynamically-loaded libraries this will require some work on the tracer side",Perfective Changes,perfective,,test,add function,,,
https://github.com/eclipse/linuxtools/commit/10282f6d95460191de2f32180d18c90a04491673,tmf : introducing the mipmap introduce the abstracttmfmipmapstateprovider class which can be used to modify state system attributes while creating a mipmap of the attribute for one or more of the supported features (max min average) add queries for max min and average of an attribute over a range to the state system operation if the attribute was not built using the mipmap state provider the queries still work but query the base attribute intervals over the full range,Perfective Changes,perfective,mismatch,test,introducing,,,
https://github.com/eclipse/linuxtools/commit/88acebd74b6b2b018e95caa788264d7ed72ae3e8,lttng: add callstack view support for ust traces ust traces using the lttng-ust-cyg-profile library will contain events about function entries and exists we can leverage(!) this information to populate the generic tmf callstack view for now it will only print the function addresses until the whole function-names-in-the-trace debate is resolved upstream we will provide a mechanism to import a mapping file manually this will come in a separate commit,Perfective Changes,adaptive,,test,add BBB support,,,
https://github.com/eclipse/linuxtools/commit/f4c92c484a194a68397cc85a00c74cfdb4f76c89,tmf: tweaks to callstackstateprovider - add a considerevent() method to put all checks in this avoids running checks more than once per event - make the abstract methods protected instead they should not be called by external components - add a check when popping state values if func_exit names are available this makes sure the value matches the current function we are in if it doesn't log a warning in the error log this will most definitely happen if there are lost events in the trace,perfective Changes,perfective,,test,add,,,
https://github.com/eclipse/linuxtools/commit/2dd07f769a5ab03b63a407cdf77e0cb1bb07fbf5,tmf: trace synchronization using network events * event matching infrastructure allow to create dependencies between 2 events * network events (tcp packets) are matched for lttng 20 traces using one of two techniques: fgiraldeau's dynamic probe addon module or an experimental branch with additional data on net_* tracepoints of lttng-modules * traces in an experiment are synchronized using the fully incremental convex hull algorithm * a trace's timestamps can be modified using timestamp transforms classes tmftimestamptransformlinear takes a slope and/or an offset * once synchronized the trace is copied without its supplementary files so the state system is regenerated with synchronized time * a new synchronization view shows statistics about the synchronization * the synchronization information is kept at the experiment level to be able to view synchronization's statistics after first sync * synchronization formula for a trace is saved in supplementary files * unit for trace synchronization,perfective Changes,perfective,,test,allow create,,,
https://github.com/eclipse/linuxtools/commit/e8035ce4d3f81e32adb15d5fb8d4adc26d83405e,tmf: avoid throwing exception in tmftracebuildstatistics() replace the exception with an istatus return value similar to what was done with buildstatesystem() also handle the actual values that are returned in the caller (the traceopened signal handler) so that any eventual errors are logged,perfective Changes,perfective,mismatch,test,avoid handle,,,
https://github.com/eclipse/linuxtools/commit/e27acc176f3d0f6002da08ea664a6ae258d3feb9,"tmf: make tmftracebuildstatesystem() return an istatus this removes the need for the suppresswarnings(""unused"") since every implementation can now return an istatus (or simply a statusok_status if everything went fine) instead of throwing an exception",perfective Changes,perfective,,test,make implementation,,,
https://github.com/eclipse/linuxtools/commit/8332fe6a84f1d2e3c9e84b52d5db1bc34f8dd0fc,tmf: add the concept of host id to a trace this patch adds the concept of a host to a trace by default the host is the name of the trace itself (so 1 trace => 1 host) for ctf traces the clock uuid is used to uniquely identify the host (boot session) the trace was taken from,perfective Changes,perfective,mismatch,test,add,,,
https://github.com/eclipse/linuxtools/commit/6ccf56714250f70c83d1f12078d2c5eb2648475a,make lower priority requests pre-emptible the current request priority handling is based on splitting lower priority requests into chunks of a fixed size that don't take too long to process if a higher priority request is issued (eg as the result of a user action) it is simply put in front of the request queue ie before the next low-priority chunk this patch modifies the tmfrequestexecutor to use 2 queues (one for each priority) and implements a pre-emption scheme to make higher priority requests run immediately this is the first step in a more comprehensive overhaul of the tmf request model,Perfective Changes,perfective,mismatch,test,make,,,
https://github.com/eclipse/linuxtools/commit/ac28ea296942591eb89a361e3dbf857d0e1bf905,use threads in open experiment/trace for long init operations additionally the error handling in open experiment/trace is changed to dispose the trace object in an error case also some error print-outs are updated,Perfective Changes,perfective,mismatch,test,use,,,
https://github.com/eclipse/linuxtools/commit/568928280c5c0d5711e791418c92e57ff30bf5f8,save and restore current time and range when switching traces - itmftrace augmented with methods to return current time and current range - tmftrace implements the new interface - tmftrace provides a method to return the default initial range offset that can be overridden - tmftrace initializes the time range when the first event is parsed - tmftrace updates the current time and range on time and range synch signals the current time and range are only updated if they intersect with the trace range - controlflowview uses the trace's current time and range when a trace is selected - resourcesview uses the trace's current time and range when a trace is selected - histogramview uses the trace's current time and range when a trace is selected - tmfstatisticsviewer uses the trace's current range when a trace is selected - tmfuml2sdsyncloader uses the trace's current range when moving to a new page - timechartview uses the trace's current time when a trace is selected - reading of the first event to initialize the start time if moved from tmftracetraceopened() to tmfeventseditorcreatepartcontrol() to ensure that this always occurs before any signal handler is called regardless of the order in which tmftraceopenedsignal is broadcast,Perfective Changes,perfective,mismatch,test,save restore implements,,,
https://github.com/eclipse/linuxtools/commit/99a0f482a753dddd3d8f4b92d81eb1af479bea04,update tmf environment view to use tree with columns the new implementation uses a tree to group environment variables per ctf trace (instead of one flat list) this improves the readability of this view,perfective Changes,perfective,,test,use new implementation,,,
https://github.com/eclipse/linuxtools/commit/e112cbd0b5c65693969a62a2ab911665503152c5,implement simultaneously opened traces in tmf - change all supporting views to use a generic itmftrace instead of a tmfexperiment - tmfexperiment* signals removed replaced by generic tmftrace* signals - tmftraceopened signal is sent when opening a trace views should get ready to receive tmftracerangeupdated if they need to coalesce requests it is too early to access any state system - tmftracerangeupdated signal is sent from the tmftrace after receiving tmftraceopened request coalescing can happen handling this signal - tmftrace base class triggers its indexing on receiving tmftracerangeupdated - removed indexing of custom traces in inittrace now triggered by tmftraceopened in tmftrace base class - tmfexperiment initializes the streaming monitor on reception of tmftraceopened - tmftraceselected signal is sent when the trace is initially brought to top or any time it becomes the active trace any component can also broadcast the signal to trigger bringing the trace to top - tmftraceclosed signal is sent when the trace is closed all jobs/threads/requests related to this trace should be canceled the trace will be disposed after the signal has been broadcast - these signals can contain a tmfexperiment as the affected trace any view which needs to check or handle individual trace should specially handle an instance of tmfexperiment and examine its underlying traces - building of state system and statistics moved from inittrace to reception of tmftraceopenedsignal this allows in the case of a reopened trace for the previous trace to be disposed and its files closed before the new instance initializes the state system - all supporting views cancel running jobs/threads/requests on tmftraceclosedsignal - controlflow/resources view store entry list of all opened traces in hash map - controlflow/resources view use cancelable buildthread - cleanup the state system when disposing a ctfkerneltrace - dispose of ctftmftrace clears reference to ctftrace and this is used to prevent npe on getnext of disposed trace - replace events view with editor area in lttng kernel and tracing perspectives - updated definition of tracetype extension for defaulteditor element - openexperimenthandler opens the experiment in events editor default editor is used unless all underlying traces share a common defaulteditor in their respective tracetype definition - opentracehandler opens the trace in default or specified events editor it no longer uses a dummy experiment to wrap the trace - removed methods and variables related to current experiment - removed eventsvieweditor previously used as a workaround to open bookmarks in events view - removed clears views command made obsolete by closing all traces (close all on any tab) - itmfeventsfilterlistener/provider interfaces removed and replaces with signal handling this removes complexity of handling multiple listeners and providers being added and removed - fixed missing scaling to nanoseconds of timestamps in abstractstatechangeinput - fixed synchronization issue with armrequest in tmftrace when trace is disposed (executor is shutdown) - tmfeditorinput modified to prevent lingering reference in platform - tmfeventseditor implements ipartlistener to trigger broadcast of tmftraceselectedsignal instead of at setfocus which was sometimes called twice by the platform - tmfeventseditor no longer needs to use inner tmfexperiment subclass to trigger indexing when experiment opened from bookmark - unsortedpropertysheetpage class created instead of inner class in tmfeventseditor which was causing lingering reference to editor in platform - remove unused tmftraceparserupdatedsignal - tmfenvironmentview refactored to update its table on tmftraceselectedsignal - use nanosecond timestamp scale constant where appropriate - add interface to histogramview to allow its controls to retrieve the current trace - implement synchronization of time range in timechartview - fix lingering reference to completed requests in tmfuml2sdsyncloader - fix tmfvirtualtable setselection allowing top rank to be too large when selecting near end of table - fix hanging wait cursor in sequence diagram view for traces without any sequence events,Perfective Changes,perfective,mismatch,test,implement,,,
https://github.com/eclipse/linuxtools/commit/dff400028c1274b939d5a5979adcb6e9d715ab3d,implement multilineinputdialog for add bookmark action supports multiple line description tool tip position calculation is corrected,perfective Changes,perfective,,test,implement,,,
https://github.com/eclipse/linuxtools/commit/6aacfbad456155c56bed71bbdee74bfa1f796a24,tmf: add a statesystemdisposedexception once a state system is diposed no future queries should be run on it if such a thing happens the new statesystemdisposedexception will be thrown this can help views know that they should stop doing queries,perfective Changes,perfective,mismatch,test,add,,,
https://github.com/eclipse/linuxtools/commit/fa9d52156846f9aad8b7aba69336db94b042b2b1,tmf: add dispose methods to the state and stats backends when a trace/experiment is closed while a state history is being built (either for storing kernel states or statistics) the build should be cancelled as part of the trace's dispose() this means the threads should be stopped cleanly the files should be closed and any ongoing requests should be cancelled,perfective Changes,perfective,mismatch,test,add,,,
https://github.com/eclipse/linuxtools/commit/6c218c46baf103df1d2c4674cb8c5eb2b97c7d2f,tmf: statistics provider based on event requests this patch adds a tmfeventsstatistics which uses trace event requests and counts the instances of each event types to provide statistics information this is useful for trace types that cannot use the default implementation using the state system (traces where events are not chronologically ordered for example) the previous tmfstatistics has been renamed tmfstatestatistics to better differentiate between the two alternatives that are now available to keep the request coalescing the separate threading is now done is a new itmfstatisticsupdatestats() this allows the signal handler code to send the queries but return immediately and spawn a thread that will wait for the requests to be done when the results are ready they will be sent back to the view using the new tmfstatsupdatedsignal this makes the handler for the statesystembuildcompleted signal obsolete,perfective Changes,perfective,,test,add use,,,
https://github.com/eclipse/linuxtools/commit/4cca5d52f32c5b4a3db924610155759955bfa0e1,add support for selected event in properties view,perfective Changes,perfective,,test,add support,,,
https://github.com/eclipse/linuxtools/commit/e3d9ca5f1809ad021546d7f456d730f079550119,tmf: make tmfstatisticsviewer use the trace's stats provider rework the tmfstatisticsviewer to get its information from a itmfstatistics object (instead of doing direct event queries on the trace) that way the logic to compute the statistics is now separate from the view which i think is a good thing this removes the need for the itmfextrainfo completely unit have also been updated to take account for the fact that the view does not 'count' anymore it just displays whatever we send it other changes: - consolidated the setters in tmfstatisticstree - renamed tmfstatisticsnodegetvalue() to getvalues() to better indicate that it is the wrapper object around the values that is returned fixes 387634,Preventive Changes,perfective,mismatch,test,make use,,,
https://github.com/eclipse/linuxtools/commit/baf6784f3e0d4904daa3c14a035f39357c1ae204,"tmf: introduce the itmfstatistics interface with this any type of itmftrace can now define its own statistics provider this can then be used to populate views like the histogram or the statistics view a base implementation is proposed in tmfstatistics (and used by tmftrace) and it uses a state system for its backend that state system is completely contained in the tmfstatistics object so that it's not confused with any ""real"" state system that could be present in the trace",perfective Changes,perfective,mismatch,,introduce used provider implementation,not confused,,
https://github.com/eclipse/linuxtools/commit/86f9327531bbe9eba72f6d871e823e5342f8be63,store event in tableitem data,Perfective Changes,perfective,mismatch,,store,,,
https://github.com/eclipse/linuxtools/commit/2de8425ebdc38d6d268b6b84ad44a272e7e1f490,tmf: refactor the statistics manage the viewer input directly in the viewer rather than in the view,perfective Changes,perfective,mismatch,,manage,refactor,,
https://github.com/eclipse/linuxtools/commit/53388a149786cf7bdeb9361c711446246576cbab,"updated enum handling for a ctftmfeventfield this change provides a way to extract the enum long value and enum value name from the ctf enumdefinition and store it in a ctftmfeventfield object before this change the ctftmfeventfield only contained the enum value name for this change the class pair<a,b> which was part of the legacy lttng core is now integrated in tmf core added junit for pair class",perfective Changes,perfective,,,Added updated handling provides store,change integrated,,
https://github.com/eclipse/linuxtools/commit/67f6f7d942065ac66ed8f9b1f191b55cf62ab3d4,tmf: add a convenience method to query stack attributes,Perfective Changes,perfective,mismatch,,add,,,
https://github.com/eclipse/linuxtools/commit/e68ddcbc7dc45cd49dc1e6d45b70dcd2f4c22014,tmf: use tabs in statistics view for each traces when an experiment/trace is selected the statistics view creates a global viewer and a specific viewer for each trace contained in the experiment these viewers are placed in tabs and shown in the statistics view also a factory is now used to create a viewer based on his definition in the plug-inxml from the trace type an extension point element has been added to the trace type extension point to provide custom statistics viewer fixes 387217 on,Perfective Changes,perfective,mismatch,,use creates create added definition,placed,fixes,
https://github.com/eclipse/linuxtools/commit/1f0bb2ddf8727c4631810c7b835db28f835ff4a7,tmf: generalization of the statistics view the creation of the statistics view is now based on the type of the trace selected and his plugin definition thus it is easier to provide a new implementation of the statistics for a different kind of trace,Perfective Changes,perfective,mismatch,,creation provide implementation ,,,
https://github.com/eclipse/linuxtools/commit/cbc6aff52149ae67d65957220ba99513f5640da4,tmf: add a column in the statistics view 383246: add a column for statistics only in the visible window,preventive Changes,perfective,mismatch,,add,,,
https://github.com/eclipse/linuxtools/commit/bccf1d0668cf9d7404528449c9e1ddb8398578a8,add delegate attribute to launch provider launch provider has a delegate attribute that provides a handle to specific launch configuration delegate this is used to launch plug-ins from the configurations tab,"preventive Changes, Adaptive changes",perfective,mismatch,,add handle provide used,,,
https://github.com/eclipse/linuxtools/commit/a48825e0c1f5c7c752f5b34559216346a7423ec2,fix for 382158: performance issues with event table filtering,Perfective Changes,perfective,mismatch,,performance issue,fix,,
https://github.com/eclipse/linuxtools/commit/6572cff6d817a2eb23d8d3f39cc6c716771e7037,format internal request tracing,Perfective Changes,perfective,mismatch,,format,,,
https://github.com/eclipse/linuxtools/commit/99d5d99e838bb363417e6b592e39c721c10e54ca,work on request coalescing,perfective Changes,perfective,,,work,,,
https://github.com/eclipse/linuxtools/commit/431a4fdb4e79cec11905b67a7c20b4161cd0abc4,use supplementary directory for state history tree,perfective Changes,perfective,,,use,,,
https://github.com/eclipse/linuxtools/commit/97ae1c0fb153895a638e439ffbd4efdd74954dd2,add missing tmf constants file,Perfective Changes,perfective,mismatch,,add missing,,,
https://github.com/eclipse/linuxtools/commit/9716e61fa1550422463f938cf0767a0130187ef5,use supplementary directory for state history tree,perfective Changes,perfective,,,use,,,
https://github.com/eclipse/linuxtools/commit/588682816929fc6902246e8e6a0ea851a267954a,add handling of supplementary files of traces,perfective Changes,perfective,,,add handling,,,
https://github.com/eclipse/linuxtools/commit/1afa96edfe766c18a1d80fd58f910bc547305fcc,tmf: make historybuilder use a tmf request for its events initially the istatechangeinput object would have to open the trace itself and merely send state changes rework this interface so that we now have to pass it the events this allows historybuilder to hook into tmf's event requests and benefit from the coalescing this will be tweaked a bit more soon when we put all indexing requests together,perfective Changes,perfective,,,make use initially allows,changes rework,,
https://github.com/eclipse/linuxtools/commit/ce8794d35d256aad1eaefda71308dc54375320d2,this is a piechart implementation piechart class extends chart from swtchart it adds a paintlistener and a piechartseries methods piechartpaintlistener implements a paintlistener gets the pieseriesarray and calculates the angles to draws the primitives in the paintcontrol method icolorsconstants is an interface of swtgraphicsrgb colors,perfective Changes,perfective,,,adds implementation,,,
https://github.com/eclipse/linuxtools/commit/23b0c57921b4cb5ca81e06524ec0950c3925c229,enable more warnings and fix them,Perfective Changes,perfective,mismatch,,enable more,fix,,
https://github.com/eclipse/linuxtools/commit/2de4e31e479b384bf6c11bd1a61cdec7b2933c77,enable more warnings and fix them,Perfective Changes,perfective,mismatch,,,,,
https://github.com/eclipse/linuxtools/commit/b15459e5f9da531eca4ecd18804cc7bf6be0eba4,use title from the devhelp2 file it is way more informative than the directory name,Perfective Changes,perfective,mismatch,,use more,,,
https://github.com/eclipse/linuxtools/commit/ad4735fb7d4d0987c2c2adef61346715d5bfe572,extract itopic and itoc implementation in their own files,Perfective Changes,perfective,mismatch,,implementation,extract,,
https://github.com/eclipse/linuxtools/commit/18b5a7875b33c32181a30333b6af96bc151d6600,systemtap: implementing line chart,perfective Changes,perfective,,,implementing,,,
https://github.com/eclipse/linuxtools/commit/828e6d748ba13f9a05f7611d4b99b0b914def017,systemtap: implementing scatter chart,perfective Changes,perfective,,,,,,
https://github.com/eclipse/linuxtools/commit/e01715736570787024910bdb3cf25dfa30ae4469,add environment variables view widget,Perfective Changes,perfective,mismatch,,add,,,
https://github.com/eclipse/linuxtools/commit/f61e1b03d280a1f7b634db545c315b655d955a12,change output of ctf tostrings to be more human readable,Perfective Changes,perfective,mismatch,,change more,,,
https://github.com/eclipse/linuxtools/commit/fc626fa6b76da64410dc79f95d66d87825be1fa9,systemtap: adding diffent colors for different bars,perfective Changes,perfective,,,adding,,,
https://github.com/eclipse/linuxtools/commit/9115c86e104a0df08df8533625ea0b15e094c3ed,systemtap: creating an empty barchart with correct title using swtchart no birt libs were used,Perfective Changes,perfective,,,creating using correct,no libs,,
https://github.com/eclipse/linuxtools/commit/96adfbeee26202ce3a743f665c129eb4d230dd68,implement data rendering and begin making charting look similar to birt,Perfective Changes,perfective,mismatch,,implement making,,,
https://github.com/eclipse/linuxtools/commit/da2665c118b0da9e6038ef76644cf8bcac4827d5,add capability to enable events with different parameters on session domain and channel level,Perfective Changes,perfective,mismatch,,add capability enable,,,
https://github.com/eclipse/linuxtools/commit/ac317dfe21f5a8ef64d620342b8dc4db5ea5aa73,begin implementing dataviewers bar chart functionality in swtchart,Perfective Changes,perfective,mismatch,,begin implementing functionality,,,
https://github.com/eclipse/linuxtools/commit/fb349d615248bd796c3bd0c9070d1bfbdede67d3,use getfullpath() instead of getlocation() when linking to source code the call to getsourceelement may return an object that has a file system path associated with it but does not implement the ifile interface if it implements istorage we can still link to the source code,Perfective Changes,perfective,mismatch,,use implement,instead of,does not,
https://github.com/eclipse/linuxtools/commit/0ed3e9b450f43c8ae307516208a2c993bc8a9930,added properties implementation,Perfective Changes,perfective,mismatch,,added implementation,,,
https://github.com/eclipse/linuxtools/commit/6ced273a3f22b79f589f33a5512459b2795f364a,add remoteproxy support to profiling * meta-inf/manifestmf: add new dependencies * src/org/eclipse/linuxtools/profiling/launch/remoteproxymanagerjava: new file * src/org/eclipse/linuxtools/profiling/launch/iremoteproxymanagerjava: new file * src/org/eclipse/linuxtools/profiling/launch/iremotefileproxyjava: new file * src/org/eclipse/linuxtools/profiling/launch/iremotecommandlauncherjava: new file * src/org/eclipse/linuxtools/profiling/launch/iprocessjava: new file * src/org/eclipse/linuxtools/internal/profiling/launch/localprocessjava: new file * src/org/eclipse/linuxtools/internal/profiling/launch/locallauncherjava: new file * src/org/eclipse/linuxtools/internal/profiling/launch/localfileproxyjava: new file,Perfective Changes,perfective,mismatch,,add support new,dependencies,,
https://github.com/eclipse/linuxtools/commit/17cb3b872638d898e7a32228793463da5fc63115,implement exporting heap chart to png format,perfective Changes,perfective,,,implement,,,
https://github.com/eclipse/linuxtools/commit/c5d8e01fbbf0f5bb881c2025dba257a3e7e4d03e,implement single and double click referencing of the snapshot in the chart,perfective Changes,perfective,,,implement,,,
https://github.com/eclipse/linuxtools/commit/911dbd07b1e1b7e78e6e3cc5d48173b1682b6ee3,render data and begin making chart look similar to the birt rendered one,confused,perfective,,,beging making,,,
https://github.com/eclipse/linuxtools/commit/0422f9168aba49e775c9d94684da36dcbd0da5e1,perf plug-in: added end of process messages,Perfective Changes,perfective,mismatch,,added,,,
https://github.com/eclipse/linuxtools/commit/9397a159f914e96a77a1bf73d3591283a4b875d9,initial import of perf plugin (bz,preventive Changes,perfective,,,initial,,,
https://github.com/eclipse/linuxtools/commit/dd38d8163d294834c08fd6630c1e67dedd28ff90,gprof/gcov: using the lt process factories to run commands the process factories from linuxtools use a project property to get a path environment variable to be used to run commands,confused,perfective,,,using,,,
https://github.com/eclipse/linuxtools/commit/6c7ad8886d30f36f38c2b86bca4e9cbddc3d3782,creating a project property page to change the path the project property page let's user change the path to be used by toolslaunchcore to run commands,Perfective Changes,perfective,,,creating change,,,
https://github.com/eclipse/linuxtools/commit/f0edddf0ad9cddfb4229b7915fa79d5f70149691,creating a plugin to add factories to run commands the factories from this plugin should use the linuxtools location defined in the project properties,Corrective Changes,perfective,mismatch,,creating use defined,,,
https://github.com/eclipse/linuxtools/commit/a061fd286bf3e73adf85e393fba4b9aa031f54e3,refresh project display asynchronously,Preventive Changes,perfective,mismatch,,,,,
https://github.com/eclipse/linuxtools/commit/ff5249e094736afacdd21665eeb2340038d33682,deal with hudson warnings for autotools core,confused,perfective,,,deal with,,,
https://github.com/eclipse/linuxtools/commit/1ec86ba9e32ec6d2a1454a6e298c6625404be707,fix (enhance tmfvirtualtable with tooltip and double-click listener),Perfective Changes,perfective,mismatch,,enhance,fix,,
https://github.com/eclipse/linuxtools/commit/e99ec70f8861245c752fbcca5527e3eee7d7096e,fix log error output to eclipse error log previously output was only shown on stdout/stderr only if was enabled now output is logged to the error log regardless,Perfective Changes,perfective,mismatch,,enabled,error output log,,
https://github.com/eclipse/linuxtools/commit/d2c6aa98558db174e32f51705d4de3c25d978588,2011-05-03 severin gehwolf * src/org/eclipse/linuxtools/oprofile/core/linux/opxmlrunnerjava (run): fix for eclipse bz increased input buffer size for xml reader to 100k,Perfective Changes,perfective,,,increased,fix,,
https://github.com/eclipse/linuxtools/commit/75076314f03488212ed5975a0770530cc3232704,introduce request block size for bg requests,Perfective Changes,perfective,,,introduce,,,
https://github.com/eclipse/linuxtools/commit/850a6e433c972f4c45de8d065e4c419d1cd5f461,fix for - add color legends,Perfective Changes,perfective,mismatch,,add,fix,,
https://github.com/eclipse/linuxtools/commit/7203f70c99c8f8ef7b0eeae1aea6e62f7492a1bb,fix for table search + disable tmfraweventviewer if not in editor,Perfective Changes,perfective,mismatch,,disable,fix not,,
https://github.com/eclipse/linuxtools/commit/0b522a6a6bf6a514d6f9a08860e0b1e8b893338d,improve internal signal handling,Perfective Changes,perfective,,,improve handling,,,
https://github.com/eclipse/linuxtools/commit/655c71c35387a08b3fc5686f8ba4397b22e9e406,2011-02-17 alexander kurtakov * src/org/eclipse/linuxtools/rpm/ui/messagesjava (getstring): add javadoc * src/org/eclipse/linuxtools/rpm/ui/rpm_stringsproperties: more externalized strings * src/org/eclipse/linuxtools/rpm/ui/rpmnewprojectjava (createproject): use utility from core plugin * src/org/eclipse/linuxtools/rpm/ui/srpmimportpagejava (getselectedsrpm): format (run): likewise (createcontrol): new controls on the page (createprojectdetails): likewise (createsourcerpmcombo): likewise (changeprojectsettings): modify the shown project path (getprojectname): get the project name from the srpm name (canfinish): format (getnewproject): use util class from core plugin for creation of the project,Perfective Changes,perfective,mismatch,,add use creation,,,
https://github.com/eclipse/linuxtools/commit/288cd42d9826ed44144d3d825ca84479d3819db7,2011-02-17 alexander kurtakov add utility class for creating rpm projects * src/org/eclipse/linuxtools/rpm/core/rpmprojectcreatorjava: new file * src/org/eclipse/linuxtools/rpm/core/rpmprojectlayoutjava: new file,Perfective Changes,perfective,,,add creating new,,,
https://github.com/eclipse/linuxtools/commit/4658f8662834b2842d0fee2c878b12cb47dae628,enhance a bit management of binary objects,Perfective Changes,perfective,,,enhance,,,
https://github.com/eclipse/linuxtools/commit/e06fcc409a1ff14fee47b7cc06cd7d91b912a3cf,"2011-01-12 bernd hufmann fix for 333114 * src/org/eclipse/linuxtools/lttng/ui/views/statistics/model/kernelstatisticsdatajava: update statistic handling for processes that change name at event of type ""exec"" and after fork",Perfective Changes,perfective,mismatch,,update handling,change fix,,
https://github.com/eclipse/linuxtools/commit/18a5caebc2ba75ff8323db367046e5f9fdb08b66,fix logic for commandutils getcurrentconnection - previous fix missed the fall back of using the first connection that dockerimagesview and dockercontainersview uses,Corrective Changes,corrective,,test,fix fall back,,,
https://github.com/eclipse/linuxtools/commit/4f03cce683cf2d47f6ae32e5da99f3aeb01e80dd,491999 - docker build fails when called via quick access menu - make connection detection more robust to handle case where docker explorer view isn't up yet and a connection selected - add some logic back into commandutils and use it instead of calling dockerconnectionwatcher directly,Corrective changes,corrective,mismatch,test,fails,,,
https://github.com/eclipse/linuxtools/commit/d045d7dcfc1c024c38fa63cf2632881469dc52e0,486446 - standinexception in dockermachineexecute checking that the 'docker-machine' command is found before attempting to run it and validating the docker mahcine preference page by checking that the command is found there too,Corrective Changes,corrective,,test,exception,,,
https://github.com/eclipse/linuxtools/commit/2fab192d8c85f9170af9ae36f18df7b346b6a2b1,489533 - nullpointerexception in pushimagecommandhandler$1run prevent npe by checking the connection is not null in the command handler disable the command handler in the toolbar if there is no selection refactored the imagepushpage to use the same createcontrol() code style as in the imagetagpage also page is immediately valid if it displays a combo (ie there is at least one image name/tag),Corrective Changes,corrective,mismatch,test,not null,,,
https://github.com/eclipse/linuxtools/commit/d8e673a857ef06540ce06d7fc7dec487b6bd591f,oprofile: fix ocount view not opening the issue is when you close ocount's view and run again the refresh won't re-open it,Confused,corrective,,test,fix issue,,,
https://github.com/eclipse/linuxtools/commit/b60ce926a544c3e986e9df172a4318b92a70a773,"484485 - restore dialog when building docker image if connection does not exist anymore showing the launch config editor sheet for the corresponding config when connection is missing validating that a connection has been specified added swtbot to cover multiple cases with utility class to import a project in the unit workspace removed ""throws interruptedexception"" where not applicable and fixed some javadocs","Corrective Changes, Preventive Changes",corrective,,test,exception fix,,,
https://github.com/eclipse/linuxtools/commit/4b7421a420ba3913d02130bc99457aa9a29b149d,485732 - dockerexception in dockerconnectionping prevent npe if the client is null only log the exception if there's an underlying cause,Corrective Changes,corrective,,test,prevent NPE null,,,
https://github.com/eclipse/linuxtools/commit/7b6e6aa274be46e04f3adbc2cd5cb868e76f828a,481300: fix various refresh issues in docker views the get -> refresh -> set logic is not what's responsible for preserving a selection after refreshes occur the ui already knows how to preserve a selection as long as the objects given to the content provider override equals() and hascode() the selection will be preserved without any intervention,Corrective Changes,corrective,,test,fix issues,,,
https://github.com/eclipse/linuxtools/commit/9eaeb4c5b780343b1017097532972342bfd7ce43,482947 - valgrind message api's: get rid of launch dependency - instead of returning ilaunch object use isourcelocator object - changed all the place where it was used in practice the only places it is used valgrindstackframe object is used not its parent where launch object is declared - removed hack in restoring participant in double click listener note that it only worked if source lookup was set to null because otherwise it is not restored properly from memento to be any useful now it is done in message parser where it creates clone of source lookup director which won't be disposed when launch object is cleared up - created internal api for parser to accept isourcelocator - changed import packages to require packages in valgrindui,Corrective Changes,preventive,mismatch,test,get rid dependency,,,
https://github.com/eclipse/linuxtools/commit/68c404802d0ff53c34debad540d48afd09100dc2,issue warning when polkit configuration files for libvirt are found the presence of polkit configuration files for libvirt means that prompts for credentials may occur java's native command execution is not a proper shell so credentials aren't 'remembered' and the prompt will occur every time,Corrective Changes,perfective,,test,issue warning,,,
https://github.com/eclipse/linuxtools/commit/da2cece7b50b0c74a8d1644466bc431d4c0faf84,484160: resolve the vagrant tool correctly on windows,Corrective Changes,corrective,,test,resolve,,,
https://github.com/eclipse/linuxtools/commit/22d8c7305421c6b1f0307de21ba7080ff7be6e65,483928 - unable to detect env variables on linux using 2 scripts for linux vs macosx to be able to use the '-i' flag in the latter and not in the former,Corrective Changes,corrective,,test,unable,,,
https://github.com/eclipse/linuxtools/commit/3e61fb1c4a21f7f9db6d5e50624752f57c02be17,482610 - images and containers view sometimes doesn't reflect connection state setting the selection to the added connection (when adding a new one) or to the first remaining connection (or null) when removing one docker images view and docker containers view react to selection change including when new selection is empty,Corrective Changes,corrective,,test,doesnât reflect,,,
https://github.com/eclipse/linuxtools/commit/4a6bc9fa6642eea6813d65f6ad8e34d593923ec0,"477808: use the same e<prd>p<prd> filesystem class from orgeclipseremote the sshproxy plugin was implementing a class from the filesystem extension point (as the orgeclipseremote does) and it was having a weird behaviour in sync projects when setting the correct remote includes it was asking for a ""ssh password"" when trying to expand the includes and even when typing the correct password it was not able to expand them",Preventive Changes,corrective,mismatch,test,weird,,,
https://github.com/eclipse/linuxtools/commit/392f3dc5c8db73db724bdde7d076411df0cc4896,476878 - unable to display logs from docker explorer view,Corrective Changes,corrective,mismatch,,unable,,,
https://github.com/eclipse/linuxtools/commit/caaa4b2f3a452981d6b6c6353a75f707a716a953,"475881 - pull image workflow improvement restored the pullimage wizard as the first step when pulling an image the ""search"" buttons opens the searchimage dialog with search term prefilled from the current image name if no tag is specified then is assumed the validation only raises warnings to avoid preventing the user to attempt to pull an image ( the docker daemon may eventually raise an error) added some junit to validate the image name patterns",Perfective Changes,corrective,mismatch,,raise error no tag avoid preventing,improvement added,,
https://github.com/eclipse/linuxtools/commit/173151795179fc6f751d8d00c256ca61ee898d14,"475504 - creating a connection with the same name results in duplicate entries in combo boxes added validation to prevent empty and duplicate connection name in the ""new connection"" wizard reverted the order in which widgets are enabled to set focus on first enabled text field (when applicable)",Corrective changes,corrective,mismatch,,results duplicate entries,creating added new added,,
https://github.com/eclipse/linuxtools/commit/05adcd885f2a59d20ed5b5f0175c5cf4c1fe1ad9,"468966 - new connection wizard fails when no settings are detected refactored the wizard page to use databinding and to validate connection settings input: - the unix socket exists and is readable/writable - the tcp connection scheme is ""tcp"" ""http"" or ""https"" - the tcp connection host and port are valid - the path to certificates exists and is readable (those values are validated according to the connection mode) - automatically insert a ""unix://"" prefix (scheme) in the ""unix socket"" field when the user selects a file from the filedialog",Corrective Changes,corrective,,,fails no,refactored,,
https://github.com/eclipse/linuxtools/commit/98bf5b197b0104cd39f0c1612a5ee3847d4c1726,remove some print statements and fix typo in property such errors happen when there is access to a stream the underlying libraries have closed we try to avoid this by checking the state of the container but this may not be enough,"Preventive changes, Corrective changes",corrective,mismatch,,fix errors avoid,remove,,
https://github.com/eclipse/linuxtools/commit/149f1bf86521c53613e057fd5faa0a0895c6c9b5,"468754 - images view shows all elements at startup even if the ""show all images"" filter is unselected problem appeared on both containers and images view - enforced the filters at the end of part creation - changed to form title to include the number of items displayed (and the total number of items when filters are enabled) - changed a method signature to simplify the refresh in commandutils - used constants to refer to the dockerexplorerview id - reset the toggle commands and apply the filters when the view is created",Corrective Changes,corrective,,,problem,unselected simplify,creation changed used,
https://github.com/eclipse/linuxtools/commit/5328e7e5693e65c60cdbd80b9cfa5e514675dd03,tmf: 457109: throttle time graph listener notifications,Corrective Changes,corrective,,,throttle,,,
https://github.com/eclipse/linuxtools/commit/d36de10dd8f3c70d128dcb5f96a5dac40464d060,tmf: 458085: incorrect parsing of timestamps in tmffiltercomparenode,Corrective Changes,corrective,,,incorrect,,,
https://github.com/eclipse/linuxtools/commit/fecdc7fcd72967435ffccc320229b0bdf67384a9,"tmf: correctly dispose sub-components of a partial history backend this will avoid lingering ""event handler"" threads when using partial state histories",Perfective Changes,corrective,mismatch,,correctly,avoid using,,
https://github.com/eclipse/linuxtools/commit/c72f90a6cdaca30128869dbedcc22d2da9264bb3,ctf: fix npe when running ctf platform-less,Corrective Changes,corrective,,,fix,,,
https://github.com/eclipse/linuxtools/commit/9f7b8440a71bf775580c299f59711b2ec08b7610,tmf: correct when synchronizing more than 2 traces previously when synchronizing more than 2 traces it would return false results when not all traces had a path to all others some timestamp transforms need composition to be accurate wrt the reference trace,Corrective Changes,corrective,,,correct bug,more not traces,accurate,
https://github.com/eclipse/linuxtools/commit/df42392dd27d0d3e3fc18321d22e9828fc8d7b5d,oprofile: fix error to execute operf in synchronized projects operf execution were not working in synchronized project because it was passing local folder in --session-dir parameter changed to use remote proxy manager to determine the folder properly,Corrective Changes,corrective,,,fix error not working,changed use properly,,
https://github.com/eclipse/linuxtools/commit/ea6393643819873e9031480053de6fb92b07a80b,tmf: some fixes to folder handling in synchronization,Corrective Changes,corrective,,,fixes,handling,,
https://github.com/eclipse/linuxtools/commit/67da2136b348b04de378ce22fbd7e8b2df9d6893,tmf: apply the fix from fcd253f to double state values,Corrective Changes,corrective,,,apply fix,,,
https://github.com/eclipse/linuxtools/commit/972869380c66a93ecb448be8b56afde4c9964ab5,ctf: callsite fix when position is negative (binarysearch),Corrective Changes,corrective,,,bug fix,,,
https://github.com/eclipse/linuxtools/commit/28392e827ce7c11cfa27d26e5d8d48b9a1d7ac8d,fix swt widget disposed exception in sequence diagram view additionally: - fix typo in opentracehandler - add check for file existence in ctftrace,corrective Changes,corrective,,,fix exception,disposed additionally,,
https://github.com/eclipse/linuxtools/commit/8d58ce2853847af17008ee8e02cb7f941bd42fee,tmf: handle 'null' active pages in views there is a possible race condition when launching the program between the platform's window and the views' active page use getsite() in views where possible instead of platformui and add null checks where this is not possible,corrective Changes,corrective,,,race condition not possible,instead handle,,
https://github.com/eclipse/linuxtools/commit/612266c952e33c9f9608fe9240180e000c048c86,fix npes in sequence diagram framework during shutdown multiple instances of npes: - tmfuml2sdsyncloader - loadermanager - sdview,corrective Changes,corrective,,,fix,framework,,
https://github.com/eclipse/linuxtools/commit/b5d37722eaad66a3d8289e683e553fabd68ba470,tmf: dispose of the model in the statistics viewer fixes 388022 when a statistics view is disposed it cleans the complete static model that may still be in used by another statistics view it is useless to suppress the complete model in the view since the viewers are the one responsible to delete their own data,corrective Changes,corrective,,,fixes delete,dispose clean useless,,
https://github.com/eclipse/linuxtools/commit/8a42304ba1dc4bcb3c17d35c62ce7ac07e716f18,fix the fallout of the generics-removal in legacy lttng,corrective Changes,corrective,,,fix fallout,,,
https://github.com/eclipse/linuxtools/commit/0f2ca7d97abdada02281d3a78db012682cba4d2a,fix some minor issues in tmf for ctf support,Corrective Changes,corrective,,,fix issue,support,,
https://github.com/eclipse/linuxtools/commit/77871d8d9519a72cedb3d3403e0f8626ed25b187,partial fixes for experiment indexing with ctf traces,Corrective Changes,corrective,,,fixes,,,
https://github.com/eclipse/linuxtools/commit/06f72cf4f7d3bdceb2bcb796a7d9bb2f51defeb4,fix illegalargumentexception in ctf multi-trace indexing,Corrective Changes,corrective,,,fix,,,
https://github.com/eclipse/linuxtools/commit/fef460524ce8c8791c27581d3e74078dc7eec175,fix searching and filtering in tmf events table 377558),Corrective Changes,corrective,,,fix,,,
https://github.com/eclipse/linuxtools/commit/c6cbb8db5e34bba9d065bfeb9a4e1a1b174cc48a,fix tracer warning in loadersmanager,Corrective Changes,corrective,,,fix warning,,,
https://github.com/eclipse/linuxtools/commit/de9525b0df1991d18bd4176797cae5fd60b4ab60,fix for 373698: incorrect experiment range,Corrective Changes,corrective,,,fix incorrect,,,
https://github.com/eclipse/linuxtools/commit/6c2bc085ff1aa02ecf106b521215455de7995003,various fixes following code review,corrective Changes,corrective,,,fixes,,,
https://github.com/eclipse/linuxtools/commit/cc74a23bc9a8ca6a10f28b04cac82f2fbb523cd7,fix issues arising from no project being associated with certain oprofile interactions 2011-12-16 roland grunberg * src/org/eclipse/linuxtools/oprofile/core/oprofilejava (static initializer): in some cases we may have no project to set but we may still need to have the oprofile module loaded in these cases allow loading if possible * src/org/eclipse/linuxtools/oprofile/launch/launching/oprofilemanuallaunchconfigurationdelegatejava (preexec): set the current project for manual launches,Corrective Changes,corrective,,,fix issue,no project,allow,
https://github.com/eclipse/linuxtools/commit/ffbb36970f943bcc20a381b8584665ca9e1a081f,fix 362125 * src/org/eclipse/linuxtools/internal/valgrind/ui/coremessagesviewerjava (coremessagesviewer): use an imageregistry to store the valgrind error icon (getimage): get error image from image registry * src/org/eclipse/linuxtools/internal/valgrind/ui/valgrinduipluginjava (getimagedescriptor): new method,Corrective Changes,corrective,,,fix error,use,,
https://github.com/eclipse/linuxtools/commit/94d0b8cf56f05c6bef2220c511d3985096d41cbf,fix project refresh + signal handler priority,Corrective Changes,corrective,,,fix handler,,,
https://github.com/eclipse/linuxtools/commit/422ba8d9f14b605cb990fb6849e1838b2d35f80d,partial fix for a thread leak in experiment indexing,Corrective Changes,corrective,,,fix leak,,,
https://github.com/eclipse/linuxtools/commit/17429dca4b2a18c5691642864f7daf757588f394,fix for custom parsers,Corrective Changes,corrective,,,fix,,,
https://github.com/eclipse/linuxtools/commit/0f6a4ca54902425db5866b0496b25d1062dcce9f,add npe check in command handlers (fix for,Corrective Changes,corrective,mismatch,,NPE,,,
https://github.com/eclipse/linuxtools/commit/6ea448992034bb59ab7e8e7362074eda84ff2ad0,fix export to properly handle both flat and rpmbuild exports,Corrective Changes,corrective,,,fix,properly handle,,
https://github.com/eclipse/linuxtools/commit/7fd1ad131cd4c20ed97c8c739c9379ecad319027,fix a range synch issue in the events table,Corrective Changes,corrective,,,fix issue,,,
https://github.com/eclipse/linuxtools/commit/411f8bfd7e621f06e36ceb26cd63417cbe8e62f8,2011-02-17 alexander kurtakov remove the ability to import into existing project it was too errorprone and crying for troubles * src/org/eclipse/linuxtools/rpm/ui/srpmimportpagejava (srpmimportpage): remove unneeded parameter (getselectedsrpm): add non-nls (createcontrol): do not create the projects box (modifytext): invoke canfinish directly (createsourcerpmcombo): likewise (canfinish): do not show error on empty srpm text (finish): remove projects listing related parts * src/org/eclipse/linuxtools/rpm/ui/srpmimportwizardjava (init): remove not needed parts (addpages): likewise,Corrective Changes,corrective,mismatch,,errorprone trouble,remove ability,not needed,
https://github.com/eclipse/linuxtools/commit/d960ef15289f56c7e16f3c10c814da0ac08f898c,"update to comspotifydockerclient 340 - {build,logs}parameter -> {build,logs}param - work around non-public buildparam constants - guava 180 not available so suppress harmless tostring() logging error",Adaptive Changes,adaptive,,,update to AAA,com.spotify.docker.client,,work around harmless error
https://github.com/eclipse/linuxtools/commit/c9dca4764142541fe7282b01698246931637ddf2,adapt to neon m4 changes * generify specfileeditorgetadapter and remove useless casts thanks to that * move away of deprecated viewersorter to viewercomparator,Adaptive Changes,adaptive,,,adapt to AAA,neon,remove useless deprecated,changes
https://github.com/eclipse/linuxtools/commit/8eab419a901303018ab70de843975418e3d26f62,gcov: move to java 8 and neon * bump bree to java 8 * use lambda where feasible * don't use _ as identifier,"Adaptive Changes, Preventive Change",adaptive,,,move AAA,java,,
https://github.com/eclipse/linuxtools/commit/571f93ae0972342882f364741dd95be5af38bd80,gprof: move to java 8 and neon * bump bree to java 18 * use lambda where feasible * stop using _ as identifier,"Adaptive Changes, Preventive Change",adaptive,,,move AAA,java,,
https://github.com/eclipse/linuxtools/commit/973502257901b5377613c0b24a803cbea6d201bb,oprofile: move to java 8 and neon * use lambdas where feasible * bump bree to java 18,Adaptive Changes,adaptive,,,move AAA,java,,
https://github.com/eclipse/linuxtools/commit/7466f8c5461dd140e9906a1cde35e5fadadcd985,perf: move to java 8 and neon * bump bree to java 18 * use lambdas where feasible,Adaptive Changes,adaptive,,,move to AAA feasible,java,,use
https://github.com/eclipse/linuxtools/commit/e3d767d96ca1d2804a6416e2ed936ddc58f84787,systemtap: bump to java 8 and neon use lambdas where feasible,Adaptive Changes,adaptive,,test,bump to AAA,java,,
https://github.com/eclipse/linuxtools/commit/a9afd68bac200bc59ae2cd1636293f9d96c34ffb,valgrind: update to java 8 and neon * bump bree to java 18 * use lambdas where feasible * move to submonitor from subprogressmonitor,"Adaptive Changes, Preventive Change",adaptive,,test,update AAA bump AAA,java,,
https://github.com/eclipse/linuxtools/commit/b68d43fe7cc048777193c69aa984a1c0a55b8680,rpm: bump to java 8 and neon * use lambdas wherever found * subprogressmonitor to submonitor conversion,"Adaptive Changes, Preventive Change",adaptive,,test,bump to AAA,java,,
https://github.com/eclipse/linuxtools/commit/36fb7a432099c2beb5ae397cd39b160b72e1e9d4,467931 - adapt proxy to changes in oeremote and ptp following oeremote and ptp changes have broken remote proxy: - rdt and remotetools no longer supported in ptp - oeremote implements osgi services now any reference to unsupported schems will throw coreexception added a new plug-in with it is neeed to export test_host test_username and test_password variables to activate them otherwise they will be skipped also updated ptp/remote build target to mars milestones,Adaptive Changes,adaptive,mismatch,test,adapt AAA target,ptp,,
https://github.com/eclipse/linuxtools/commit/cb17068a0d7888c49db381cd2ca8033002e752f5,tmf: adapted exporttotext feature to new events table column api,Adaptive Changes,adaptive,,test,adapted BBB,API,,
https://github.com/eclipse/linuxtools/commit/181c9d483a62dd1b9c4afee22b66d964f88b409d,perf: read stat file from ifilestore read generated stat file using ifilestore instead of java se api so that it can handle perf stat in remote/synchronized projects properly,Preventive Changes,adaptive,mismatch,,instead AAA BBB,java/api,,use handle properly
https://github.com/eclipse/linuxtools/commit/c6e4748b59851367d7c965b935d813393b8201c1,tmf: introduce a framework to hook trace analysis modules/plugins * add a new extension point to define trace analysis modules * add new interface ianalysismodule and abstract class tmfabstractanalysismodule to implement the analysis itself * tmfanalysismanager is the main class to obtain which analysis are available to a trace * ianalysisoutput interface describe the different outputs the analysis can provide objects of classes implementing this interface can register to an analysis module * the ianalysisparameterprovider allows other parts of the system to set an analysis' parameters * analysis are executed as eclipse jobs * on the ui side analysis and their provided outputs (if any) are now children of the trace and can be directly opened * unit in tmfcore and tmfui provide stub analysis,Adaptive Changes,adaptive,,,framework extension,,,introduce add new implement allows provide
https://github.com/eclipse/linuxtools/commit/6688ea3d85bb64b49a3fd46b1b2d59c1a87e770c,add preferences for lttng 20 tracer control,Adaptive Changes,adaptive,mismatch,,preference AAA,LTTng,,
https://github.com/eclipse/linuxtools/commit/7417cf82d5ee9eb6d304d2f17e8540c0a6fecf58,add support for lttng 20 command calibrate,Adaptive Changes,adaptive,,,support AAA,LTTng,,
https://github.com/eclipse/linuxtools/commit/6ed891af8a4add8c1c00c6618afaab8453e8a4d4,update remoteproxymanager logic to use new extension * src/org/eclipse/linuxtools/profiling/launch/remoteproxymanagerjava (getremotemanager): fill in logic to use remoteproxymanager extension * src/org/eclipse/linuxtools/profiling/launch/iremoteproxymanagerjava (extension_point_id): new field (manager_name): ditto (nature_id): ditto * buildproperties: add schema and pluginxml * pluginxml: new file with remoteproxymanager extension * meta-inf/manifestmf: make singleton and bump version * schema/remoteproxymanagerexsd: new file,Adaptive Changes,adaptive,mismatch,,update extension,,,new use
